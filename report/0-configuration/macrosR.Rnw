
% working directories
<<wd, echo =FALSE>>=
image.dir <- paste(getwd(), "../photos/Microscopio INC", sep="/")
#image.dir <- paste(working.dir, "photos/ExploratorySubSample", sep="/")
@



<< echo=FALSE, eval=FALSE>>=
library(EBImage)

images <- list.files(image.dir, full.names = T)


loadEqImage <- function( images ){
  ims <- readImage( images )
  ims <- channel(ims, mode = 'luminance')
  imsc <- ims[,131:960,]
  imsc <- equalize(imsc, range = 0:1, levels = 256)
  return(imsc)
}


imgobj <- loadEqImage( images )

clustering1 <- function( imgobj ){
  threshold <- otsu( imgobj )
  ims_th <- combine( mapply(function(frame, th) frame > th,
                            getFrames( imgobj ), threshold, SIMPLIFY = FALSE))

  imst <- fillHull(ims_th)
  imst <- max(imst) - imst
  return(bwlabel(imst))
}


distances <- combine(mapply(function(x) distmap(x)/max(distmap(x)), getFrames(clustering1(imgobj)), SIMPLIFY = FALSE))


segmentation <- function( cmask, imgobj ){
  mask <- watershed( distmap(cmask), tolerance = 3)
  imgseg <- propagate(seeds = mask, x=(max(imgobj) - imgobj), mask = cmask)
  return(imgseg)
}

getData <- function( imgseg ){
  list.images <- getFrames(imgseg)
  data <- do.call(rbind, lapply( list.images, function(x){
    x <- imageData(x)
    v <-  c(matrix(x, nrow=1, byrow = T))
    groups <- unique(v)
    counts <- sapply(groups, function(y) sum(v==y))
    return(cbind(groups, counts))
  }))
  s0 <- which(data[,1] == 0)
  s1 <- c(s0[-1], nrow(data)+1)
  i = 1:20
  im <- do.call(c,mapply(function(x,y,i) rep(i, y-x), s0, s1, i))
  data <- data.frame("image"= im, "cluster" = data[,1], "area" = data[,2])
}

@


